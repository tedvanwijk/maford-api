generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id        Int              @id @default(autoincrement())
  admin          Boolean
  name           String           @unique
  active         Boolean          @default(true)
  reports        reports[]
  specifications specifications[]
}

model series {
  series_id                   Int             @id @default(autoincrement())
  name                        String          @unique
  flute_count                 Int
  helix_angle                 Int
  straight_flute              Boolean         @default(false)
  tool_series_file_name       String
  tool_series_input_range     String
  tool_series_output_range    String
  tool_id                     Int
  tools                       tools           @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  catalog_index_same_as_index Boolean         @default(true)
  catalog_updated             DateTime?
  active                      Boolean         @default(true)
  series_inputs               series_inputs[]
  catalog_tools               catalog_tools[]
}

model series_inputs {
  series_input_id Int     @id @default(autoincrement())
  series_id       Int
  name            String
  type            String
  value           String?
  index           Int
  catalog_index   Int?
  series          series  @relation(fields: [series_id], references: [series_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_series_id")

  @@unique([series_id, index], name: "seriesIdIndex")
}

model catalog_tools {
  catalog_tool_id Int    @id @default(autoincrement())
  series_id       Int
  tool_number     String
  data            Json

  series series @relation(fields: [series_id], references: [series_id], onDelete: Cascade, onUpdate: Cascade, map: "fk_series_id")
}

model tools {
  tool_id               Int                     @id @default(autoincrement())
  name                  String                  @unique
  series                series[]
  tool_input_categories tool_input_categories[]
  tool_inputs           tool_inputs[]
  specifications        specifications[]
}

model tool_inputs {
  tool_input_id                 Int                    @id @default(autoincrement())
  client_name                   String
  type                          String
  property_name                 String
  tool_id                       Int?
  tool_input_category_id        Int
  group                         Int?
  order                         Int?
  required                      Boolean
  options                       String[]               @default([])
  tool_input_dependency_rules_1 tool_input_rules[]     @relation("tool_input_dependency_id_1")
  tool_input_dependency_rules_2 tool_input_rules[]     @relation("tool_input_dependency_id_2")
  tool_input_rules              tool_input_rules[]     @relation("tool_input_id")
  default_input_values          default_input_values[]
  tools                         tools?                 @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  tool_input_categories         tool_input_categories  @relation(fields: [tool_input_category_id], references: [tool_input_category_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_category_id")

  @@unique([property_name, tool_id], name: "tool_inputsPropertyNameToolId")
}

model tool_input_rules {
  tool_input_rule_id         Int          @id @default(autoincrement())
  tool_input_id              Int
  rule_type                  String
  tool_input_dependency_id_1 Int
  tool_input_dependency_id_2 Int?
  disable                    Boolean      @default(false)
  check_value                String?
  tool_dependency_inputs_1   tool_inputs  @relation("tool_input_dependency_id_1", fields: [tool_input_dependency_id_1], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_dependency_id_1")
  tool_dependency_inputs_2   tool_inputs? @relation("tool_input_dependency_id_2", fields: [tool_input_dependency_id_2], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_dependency_id_2")
  tool_inputs                tool_inputs  @relation("tool_input_id", fields: [tool_input_id], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_id")
}

model tool_input_categories {
  tool_input_category_id Int           @id @default(autoincrement())
  tool_id                Int?
  name                   String?
  display_title          String
  common                 Boolean       @default(false)
  tools                  tools?        @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  tool_inputs            tool_inputs[]
}

model specifications {
  specification_id Int             @id @default(autoincrement())
  user_id          Int
  status           String
  data             Json
  name             String
  path             String
  error            String
  version_id       Int
  tool_id          Int             @default(0)
  date_created     DateTime?
  reports          reports[]
  users            users           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
  versions         version_history @relation(fields: [version_id], references: [version_id], onDelete: SetDefault, onUpdate: SetDefault, map: "fk_version_id")
  tools            tools           @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: Cascade, map: "fK_tool_id")
}

model reports {
  report_id        Int             @id @default(autoincrement())
  specification_id Int?
  user_id          Int
  resolved         Boolean         @default(false)
  description      String?
  summary          String?
  specifications   specifications? @relation(fields: [specification_id], references: [specification_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_specification_id")
  users            users           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model version_history {
  version_id     Int              @id @default(autoincrement())
  version_number String
  changelog      String
  active         Boolean
  specifications specifications[]
}

model custom_params {
  param_id Int    @id @default(autoincrement())
  title    String @unique
  value    String
}

model default_input_values {
  default_input_value_id Int     @id @default(autoincrement())
  tool_input_id          Int
  new_tool               Boolean @default(false)
  value                  String

  tool_inputs tool_inputs @relation(fields: [tool_input_id], references: [tool_input_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tool_input_id")
}

model center_types {
  center_type_id      Int    @id @default(autoincrement())
  name                String
  a1_upper            Float
  a1_lower            Float
  d1_lower            Float
  d1_upper            Float
  a2_lower            Float
  a2_upper            Float
  d2_lower            Float
  d2_upper            Float
  l_lower             Float
  l_upper             Float
  boss_diameter_lower Float
  boss_diameter_upper Float
  boss_length_lower   Float
  boss_length_upper   Float
}
