generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider                  = "prisma-erd-generator"
  theme                     = "forest"
  includeRelationFromFields = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id        Int              @id @default(autoincrement())
  admin          Boolean
  name           String           @unique
  active         Boolean          @default(true)
  reports        reports[]
  specifications specifications[]
}

model series {
  series_id                Int             @id @default(autoincrement())
  name                     String          @unique
  flute_count              Int
  helix_angle              Int
  tool_series_file_name    String
  tool_series_input_range  String
  tool_series_output_range String
  tool_id                  Int
  tools                    tools           @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  series_inputs            series_inputs[]
}

model series_inputs {
  series_input_id Int     @id @default(autoincrement())
  series_id       Int
  name            String
  type            String
  value           String?
  index           Int
  series          series  @relation(fields: [series_id], references: [series_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_series_id")

  @@unique([series_id, index], name: "seriesIdIndex")
}

model tools {
  tool_id               Int                     @id @default(autoincrement())
  name                  String                  @unique
  series                series[]
  tool_input_categories tool_input_categories[]
  tool_inputs           tool_inputs[]
}

model tool_inputs {
  tool_input_id                 Int                   @id @default(autoincrement())
  client_name                   String
  type                          String
  property_name                 String
  tool_id                       Int
  tool_input_category_id        Int
  group                         Int?
  order                         Int?
  required                      Boolean
  options                       String[]              @default([])
  tool_input_dependency_rules_1 tool_input_rules[]    @relation("tool_input_dependency_id_1")
  tool_input_dependency_rules_2 tool_input_rules[]    @relation("tool_input_dependency_id_2")
  tool_input_rules              tool_input_rules[]    @relation("tool_input_id")
  tools                         tools                 @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  tool_input_categories         tool_input_categories @relation(fields: [tool_input_category_id], references: [tool_input_category_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_category_id")
}

model tool_input_rules {
  tool_input_rule_id         Int          @id @default(autoincrement())
  tool_input_id              Int
  rule_type                  String
  tool_input_dependency_id_1 Int
  tool_input_dependency_id_2 Int?
  disable                    Boolean      @default(false)
  check_value                String?
  tool_dependency_inputs_1   tool_inputs  @relation("tool_input_dependency_id_1", fields: [tool_input_dependency_id_1], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_dependency_id_1")
  tool_dependency_inputs_2   tool_inputs? @relation("tool_input_dependency_id_2", fields: [tool_input_dependency_id_2], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_dependency_id_2")
  tool_inputs                tool_inputs  @relation("tool_input_id", fields: [tool_input_id], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_id")
}

model tool_input_categories {
  tool_input_category_id Int           @id @default(autoincrement())
  tool_id                Int
  name                   String
  display_title          String
  tools                  tools         @relation(fields: [tool_id], references: [tool_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_id")
  tool_inputs            tool_inputs[]
}

model tool_inputs_common {
  tool_input_id             Int                         @id @default(autoincrement())
  client_name               String
  property_name             String
  category_name             String
  type                      String
  group                     Int?
  order                     Int?
  tool_input_common_options tool_input_common_options[]
}

model tool_input_common_options {
  tool_input_option_id Int                @id @default(autoincrement())
  tool_input_id        Int
  tool_inputs_common   tool_inputs_common @relation(fields: [tool_input_id], references: [tool_input_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tool_input_id")
}

model specifications {
  specification_id Int             @id @default(autoincrement())
  user_id          Int
  status           String
  data             Json
  name             String
  path             String
  error            String
  version_id       Int             @default(0)
  reports          reports[]
  users            users           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
  versions         version_history @relation(fields: [version_id], references: [version_id], onDelete: SetDefault, onUpdate: SetDefault, map: "fk_version_id")
}

model reports {
  report_id        Int             @id @default(autoincrement())
  specification_id Int?
  user_id          Int
  resolved         Boolean         @default(false)
  description      String?
  summary          String?
  specifications   specifications? @relation(fields: [specification_id], references: [specification_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_specification_id")
  users            users           @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id")
}

model version_history {
  version_id     Int              @id @default(autoincrement())
  version_number String
  changelog      String
  active         Boolean
  specifications specifications[]
}

model custom_params {
  param_id Int    @id @default(autoincrement())
  title    String @unique
  value    String
}
